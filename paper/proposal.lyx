#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Address
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
title{CPSC 433 - Scheduling Problem}
\end_layout

\begin_layout Plain Layout


\backslash
author{
\end_layout

\begin_layout Plain Layout

Konrad Aust 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
and
\end_layout

\begin_layout Plain Layout

Mark Barley
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
and
\end_layout

\begin_layout Plain Layout

Kendra Kaminsky
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
and
\end_layout

\begin_layout Plain Layout

Thomas
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
and
\end_layout

\begin_layout Plain Layout

Jordan
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
maketitle
\end_layout

\end_inset


\end_layout

\begin_layout Section
Abstract
\end_layout

\begin_layout Standard
In this paper, we will present two approaches to solving the scheduling
 problem for the Computer Science Department at the University of Calgary.
 The first is a set-based search model, with a genetic approach.
 The second is an And-Tree based 
\end_layout

\begin_layout Section
Set Based Search
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
This is a genetic algorithms approach that begins with a set of valid solutions,
 and uses mutate and crossover operations on the stop percentile of the
 population each iteration to ensure that the solution grows over time to
 a reasonably effective solution.
 
\end_layout

\begin_layout Standard
The desirability of a given solution is given by the 
\begin_inset Formula $Eval$
\end_inset

 function.
 More desirable solutions are cross-bred and mutated, and their offspring
 are added to the next generation.
 We keep the top 
\begin_inset Formula $50\%$
\end_inset

 of members of the population from one iteration to the next.
 The rest are discarded.
\end_layout

\begin_layout Standard
Mutations and crossbreeds are done in such a way that all solutions are
 kept valid.
 
\end_layout

\begin_layout Subsection
Search Model
\end_layout

\begin_layout Subsection
Seach Control
\end_layout

\begin_layout Subsection
Search Instance
\end_layout

\begin_layout Subsection
Example
\end_layout

\begin_layout Section
Tree Based Search
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Subsection
Search Model
\end_layout

\begin_layout Subsection
Seach Control
\end_layout

\begin_layout Subsection
Search Instance
\end_layout

\begin_layout Subsection
Example
\end_layout

\begin_layout Section
Conclusion
\end_layout

\end_body
\end_document
